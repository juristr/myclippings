Instapaper: Friday, Dec. 20 (Instapaper)
- Your Highlight on Location 87-88 | Added on Thursday, December 26, 2013 4:09:46 PM

Include non-technical people on the development team as analysts and testers.
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 136-137 | Added on Saturday, December 28, 2013 10:00:24 PM

There is an old Latin saying, “Qui docet, discit” (He who teaches, learns).
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 245-245 | Added on Saturday, December 28, 2013 10:37:18 PM

Commandment 1: Be a competent observer of your environment.
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 294-295 | Added on Sunday, December 29, 2013 9:36:36 AM

Commandment 2: Observing in context is key to understanding nonverbal behavior.
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 304-305 | Added on Sunday, December 29, 2013 9:38:53 AM

Commandment 3: Learn to recognize and decode nonverbal behaviors that are universal.
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 327-327 | Added on Sunday, December 29, 2013 9:49:11 AM

Commandment 4: Learn to recognize and decode idiosyncratic nonverbal behaviors.
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 337-338 | Added on Sunday, December 29, 2013 9:53:45 AM

Commandment 5: When you interact with others, try to establish their baseline behaviors.
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 353-354 | Added on Sunday, December 29, 2013 9:55:46 AM

Commandment 6: Always try to watch people for multiple tells—behaviors that occur in clusters or in succession.
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 359-360 | Added on Sunday, December 29, 2013 9:57:41 AM

Commandment 7: It’s important to look for changes in a person’s behavior that can signal changes in thoughts, emotions, interest, or intent.
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 384-384 | Added on Sunday, December 29, 2013 10:02:03 AM

Commandment 8: Learning to detect false or misleading nonverbal signals is also critical.
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 389-390 | Added on Sunday, December 29, 2013 10:03:32 AM

Commandment 9: Knowing how to distinguish between comfort and discomfort will help you to focus on the most important behaviors for decoding nonverbal communications.
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 414-415 | Added on Sunday, December 29, 2013 10:11:54 AM

Commandment 10: When observing others, be subtle about it.
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Bookmark on Location 463 | Added on Sunday, December 29, 2013 10:22:30 AM


==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 489-489 | Added on Sunday, December 29, 2013 10:27:25 AM

the limbic brain is considered the “honest brain”
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 471-471 | Added on Sunday, December 29, 2013 10:27:50 AM

“reptilian (stem) brain,” “mammalian (limbic) brain,” and “human (neocortex) brain”
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 494-495 | Added on Sunday, December 29, 2013 10:31:25 AM

neocortex, meaning new brain. This part of our brain is also known as the “human,” “thinking,” or “intellectual” brain,
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 572-574 | Added on Sunday, December 29, 2013 10:45:31 AM

rang the doorbell (something that is very unusual in her neighborhood). Suddenly, in the midst of eating, everyone’s hands froze—adults and children alike—
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 586-588 | Added on Sunday, December 29, 2013 10:47:42 AM

when confronted by a threat, people being questioned about a crime will often fix their feet in a position of security (interlocked behind the chair legs) and hold that position for an inordinate period of time.
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 596-597 | Added on Sunday, December 29, 2013 10:51:26 AM

Another way people try to hide in the open is by limiting their head exposure. This is done by raising the shoulders and lowering the head—the “turtle effect.”
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 616-617 | Added on Sunday, December 29, 2013 10:54:02 AM

Blocking behaviors may manifest in the form of closing the eyes, rubbing the eyes, or placing the hands in front of the face.
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 637-638 | Added on Sunday, December 29, 2013 10:57:33 AM

Eye blocking is a very powerful display of consternation, disbelief, or disagreement.
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Note on Location 683 | Added on Sunday, December 29, 2013 11:09:05 AM

Pacifying behavior: signaling comfort in response to an unpleasant experience
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 682-683 | Added on Sunday, December 29, 2013 11:09:05 AM

In its attempt to restore itself to “normal conditions,” the brain enlists the body to provide comforting (pacifying) behaviors.
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Note on Location 683 | Added on Sunday, December 29, 2013 11:12:28 AM

Pacifying behavior: signaling comfort in response to an unpleasant experience. we try to take a behavior that helps us calm down.
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 723-724 | Added on Sunday, December 29, 2013 11:17:11 AM

When women pacify using the neck, they often do so by covering or touching their suprasternal notch
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 741-742 | Added on Sunday, December 29, 2013 11:20:44 AM

Pacifying behaviors take many forms. When stressed, we might soothe our necks with a gentle massage, stroke our faces, or play with our hair.
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 754-754 | Added on Sunday, December 29, 2013 11:22:04 AM

Neck touching takes place when there is emotional discomfort, doubt, or insecurity.
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 756-757 | Added on Sunday, December 29, 2013 11:22:27 AM

Cheek or face touching is a way to pacify when nervous, irritated, or concerned.
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 762-763 | Added on Sunday, December 29, 2013 11:24:53 AM

Men prefer to touch their faces. Women prefer to touch their necks, clothing, jewelry, arms, and hair.
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 796-797 | Added on Sunday, December 29, 2013 11:32:15 AM

she is using her right hand on her suprasternal notch, she will cup her right elbow with her left hand.
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 821-823 | Added on Sunday, December 29, 2013 11:36:39 AM

Some individuals will do the “leg cleanser” only once, but often it is done repeatedly or the leg merely is massaged. It may also be done to dry off sweaty palms associated with anxiety, but principally it is to get rid of tension.
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Bookmark on Location 864 | Added on Sunday, December 29, 2013 11:55:09 AM


==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 1712-1712 | Added on Monday, January 6, 2014 10:24:38 PM

gravity-defying behaviors are associated with positive feelings.
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 2075-2076 | Added on Sunday, January 12, 2014 10:29:19 PM

Hiding Your Hands Creates a Negative Impression:
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 2270-2271 | Added on Monday, January 20, 2014 10:34:56 PM

Steepling of hands, fingertip to fingertip, is one of the most powerful displays of confidence we possess.
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 2279-2279 | Added on Monday, January 20, 2014 10:35:55 PM

fingers interlaced (low confidence)
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 2281-2282 | Added on Monday, January 20, 2014 10:36:06 PM

Hand-wringing is a universal way of showing we are stressed or concerned.
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 2316-2317 | Added on Monday, January 20, 2014 10:40:12 PM

people who use thumb displays generally tend to be more aware of their environment, more acute in their thinking, and sharper in their observations
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 2581-2582 | Added on Tuesday, January 28, 2014 12:33:21 AM

Head tilt says in a powerful way, “I am comfortable, I am receptive, I am friendly
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 2619-2620 | Added on Tuesday, January 28, 2014 12:42:27 AM

We squint when we are angry or even when we hear voices, sounds, or music we don’t like.
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 2658-2659 | Added on Wednesday, January 29, 2014 11:40:59 PM

Eye blocking with the hands is an effective way of saying, “I don’t like what I just heard, saw, or learned.”
==========
﻿What Every BODY is Saying (Navarro, Joe;Karlins, Marvin)
- Your Highlight on Location 2661-2662 | Added on Wednesday, January 29, 2014 11:41:13 PM

brief touch of the eyes during a conversation may give you a clue to a person’s negative perception of what is being discussed.
==========
﻿Secrets of the JavaScript Ninja (John Resig Bear Bibeault)
- Your Bookmark on Location 5241 | Added on Tuesday, February 11, 2014 6:04:33 PM


Throw away tests that haven’t failed in a year.
==========
Unit Testing Succinctly (Marc Clifton)
- Your Highlight on Location 950-950 | Added on Saturday, March 15, 2014 7:53:21 PM

Another advantage to a test-driven approach is that, by its nature, it enforces a kind of architecture
==========
Instapaper: Friday, Mar. 7th (Instapaper)
- Your Note on Location 39 | Added on Tuesday, March 18, 2014 10:18:28 PM

sadly it oftn seems so..feels like swimming against the torrent #unittesting
==========
Instapaper: Friday, Mar. 7th (Instapaper)
- Your Highlight on Location 36-39 | Added on Tuesday, March 18, 2014 10:18:28 PM

That's probably not really the case, but rather that test-infected developers are a small but vocal minority -- that developers that test tend to also be the kinds of developers that blog, make podcasts, present at conferences, write books, and so on, but these happen to only be a sadly small percentage of all the developers out there cranking out code.
==========
Instapaper: Friday, Mar. 7th (Instapaper)
- Your Highlight on Location 128-130 | Added on Tuesday, March 18, 2014 10:25:29 PM

Convincing developers to test shouldn't be as hard as it looks like it's been made. It's time to simplify the pitch: Testing is a path to reduce suffering. You will be learning it forever.
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 153-154 | Added on Tuesday, March 25, 2014 10:24:23 PM

The software architecture role is about coding, coaching and collaboration
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 209-209 | Added on Thursday, March 27, 2014 9:59:26 PM

requirements drive architecture.
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 307-308 | Added on Saturday, March 29, 2014 10:16:16 PM

A micro-service may typically be less than one hundred lines of code. If change is needed, services can be rewritten from scratch, potentially in a different programming language.
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 327-327 | Added on Saturday, March 29, 2014 10:53:53 PM

what’s the difference between design and architecture?
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 362-362 | Added on Saturday, March 29, 2014 10:58:51 PM

Part of the process of architecting a software system is about understanding what is significant and why.
==========
Software Architecture for Developers (Simon Brown)
- Your Bookmark on Location 392 | Added on Sunday, March 30, 2014 10:17:31 AM


==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 404-405 | Added on Sunday, March 30, 2014 10:19:23 AM

Becoming a software architect isn’t something that simply happens overnight or with a promotion. It’s a role, not a rank.
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 435-437 | Added on Sunday, March 30, 2014 6:30:00 PM

For me, an architecture works if it satisfies the non-functional requirements, works within the given environmental constraints, provides the necessary foundations for the rest of the code and works as the platform for solving the underlying business problem.
==========
Software Architecture for Developers (Simon Brown)
- Your Note on Location 444 | Added on Sunday, March 30, 2014 6:33:11 PM

eat your own dogfood..absolute top requirement!
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 442-444 | Added on Sunday, March 30, 2014 6:33:11 PM

Like good chefs, architects should taste what they are producing. In a nutshell, this is about proactively identifying, mitigating and owning the high priority technical risks so that your project doesn’t get cancelled and you don’t get fired.
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 460-461 | Added on Sunday, March 30, 2014 6:35:48 PM

generally speaking, a software architect who codes is a more effective and happier architect
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 504-505 | Added on Monday, March 31, 2014 9:29:39 PM

the benefits of being hands-on and engaged in the delivery process are huge. After all, there’s a difference between “knowing” and “doing”.
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 577-578 | Added on Monday, March 31, 2014 9:41:06 PM

back to its roots in Latin (architectus) and Greek (arkhitekton), it basically translates to “chief builder”
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 617-618 | Added on Monday, March 31, 2014 9:45:32 PM

tempting to make suggestions about how developers should write the code. Be careful, because you may be wasting your time
==========
Software Architecture for Developers (Simon Brown)
- Your Note on Location 653 | Added on Monday, March 31, 2014 9:53:19 PM

and many still compare software development with the process of builing a house #codingarchitect
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 652-653 | Added on Monday, March 31, 2014 9:53:19 PM

Until our industry reaches the point where software can be built in the same way as a predictive engineering project, it’s crucial that somebody on the team keeps up to date with technology and is able to make the right decisions about how to design software.
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 676-678 | Added on Monday, March 31, 2014 9:55:49 PM

coaching and mentoring should be a part of the modern software architecture role. We need to grow the software architects of tomorrow and every software development team needs their own master builder.
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 702-703 | Added on Monday, March 31, 2014 10:36:24 PM

difference between taking responsibility for a solution versus assuming that it’s not your problem.
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 716-716 | Added on Monday, March 31, 2014 10:38:18 PM

“T” is for technology, and this is exactly what good software architects need to know about.
==========
Software Architecture for Developers (Simon Brown)
- Your Note on Location 720 | Added on Monday, March 31, 2014 10:39:30 PM

you need to know what you are talking about
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 720-720 | Added on Monday, March 31, 2014 10:39:30 PM

Is this solution going to work? Is that how we are going to build it?
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 726-727 | Added on Monday, March 31, 2014 10:40:29 PM

be careful that you do keep an open mind. As the saying goes, “if all you have is a hammer, everything will look like a nail”.
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 747-748 | Added on Monday, March 31, 2014 10:43:01 PM

Does this mean that the software architect should be an expert in all of the technologies that are in use on any give software system? No. Instead collaboration is key.
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 754-754 | Added on Monday, March 31, 2014 10:43:36 PM

Good soft skills are vital too.
==========
Software Architecture for Developers (Simon Brown)
- Your Note on Location 758 | Added on Monday, March 31, 2014 10:46:12 PM

it's a lead role. you need to be able to communicate,share your knowledge.. #codingarchitect
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 758-758 | Added on Monday, March 31, 2014 10:46:12 PM

“soft skills” or “people skills” are vitally important
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 760-761 | Added on Monday, March 31, 2014 10:46:54 PM

you’re dead in the water if you’re unable to effectively communicate this to others.
==========
Software Architecture for Developers (Simon Brown)
- Your Note on Location 882 | Added on Tuesday, April 1, 2014 9:35:26 PM

some good points following now 
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 882-882 | Added on Tuesday, April 1, 2014 9:35:26 PM

If you’re a software architect:
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 882-882 | Added on Tuesday, April 1, 2014 9:35:32 PM

Be inclusive and collaborate:
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 884-884 | Added on Tuesday, April 1, 2014 9:35:37 PM

Get hands-on:
==========
Software Architecture for Developers (Simon Brown)
- Your Note on Location 979 | Added on Wednesday, April 2, 2014 10:23:02 PM

#codingarchitect
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 977-979 | Added on Wednesday, April 2, 2014 10:23:02 PM

Agile software projects still need architecture because all those tricky concerns around complex non-functional requirements and constraints don’t go away. It’s just the execution of the architecture role that differs.
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 982-984 | Added on Wednesday, April 2, 2014 10:24:49 PM

Chaotic teams need a more direct leadership approach and they will benefit from a single point of responsibility for the technical aspects of the software project. In other words, they will benefit from a single person looking after the software architecture role. Ideally this person will coach others so that they too can help with this role.
==========
Software Architecture for Developers (Simon Brown)
- Your Bookmark on Location 1022 | Added on Wednesday, April 2, 2014 10:28:41 PM


==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 1051-1052 | Added on Wednesday, April 2, 2014 10:31:34 PM

Retrofitting high performance, scalability, security, availability, etc into an existing codebase is usually incredibly difficult and time-consuming.
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 1055-1056 | Added on Wednesday, April 2, 2014 10:32:08 PM

principles are the things that you want to adopt in order to introduce consistency and clarity into the resulting codebase.
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 1277-1280 | Added on Sunday, April 6, 2014 7:45:10 PM

Even the most well-intentioned principles can sometimes have unintended negative side-effects. That complex layering strategy you want to adopt to ensure a complete separation of concerns can suck up a large percentage of your time if you’re only building a quick, tactical solution. Principles are usually introduced for a good reason, but that doesn’t make them good all of the time.
==========
Software Architecture for Developers (Simon Brown)
- Your Note on Location 1283 | Added on Sunday, April 6, 2014 7:48:12 PM

feedback is key..and to understand best practices are not a golden hammer.. #codingarchitect
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 1281-1283 | Added on Sunday, April 6, 2014 7:48:12 PM

Having an explicit list of principles can help to ensure that everybody on the team is working in the same way but you do need to make sure these principles are helping rather then hindering. Listening to the feedback from the team members will help you to decide whether your principles are working or not.
==========
Software Architecture for Developers (Simon Brown)
- Your Note on Location 1333 | Added on Sunday, April 6, 2014 7:55:16 PM

#codingarchitect
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 1331-1333 | Added on Sunday, April 6, 2014 7:55:16 PM

If you don’t understand the trade-offs that you’re making by choosing technology X over Y, you shouldn’t be making those decisions. It’s crucial that the people designing software systems understand technology. This is why software architects should be master builders.
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 1364-1366 | Added on Tuesday, April 8, 2014 10:09:18 PM

More moving parts means more work designing, developing, testing and deploying. Despite what vendor marketing hype might say, nothing is ever free and you need to evaluate the pros and cons of adding additional layers into a design, particularly if they result in additional inter-process communication.
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 1371-1372 | Added on Tuesday, April 8, 2014 10:11:18 PM

Sometimes though, individual specialisms can work against a team; simply through a lack of experience in working as a team or because ego gets in the way
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 1374-1379 | Added on Tuesday, April 8, 2014 10:11:30 PM

Web developer: Just give me the data as JSON and we can do anything we want with it on the web-tier. We can even throw in some JQuery to dynamically manipulate the dataset in the browser. Server-side developer: We should reuse and extend some of the existing business logic in the middle-tier service layer. This increases reuse, is more secure than sending all of the data to the web-tier and we can write automated unit tests around it all. Database developer: You’re both idiots. It’s way more efficient for me to write a stored procedure that will provide you with exactly the data that you need. :-)
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 1380-1383 | Added on Tuesday, April 8, 2014 10:13:55 PM

In the absence of communication, we tend to make assumptions about where components will sit and how features will work based upon our own mental model of how the sofware should be designed. Getting these assumptions out into the open as early as possible can really help you avoid some nasty surprises before it’s too late.
==========
Software Architecture for Developers (Simon Brown)
- Your Note on Location 1417 | Added on Tuesday, April 8, 2014 10:30:40 PM

software architecture is a platform for communication #codingarchitect
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 1416-1417 | Added on Tuesday, April 8, 2014 10:30:40 PM

If you think you can put together a software architecture in an ivory tower on your own, you’re probably doing it wrong.
==========
Software Architecture for Developers (Simon Brown)
- Your Note on Location 1436 | Added on Tuesday, April 8, 2014 11:03:40 PM

@cpiock ;)
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 1436-1436 | Added on Tuesday, April 8, 2014 11:03:40 PM

In order to get some consistency of approach and avoid chaos, SharePoint projects need strong technical leadership.
==========
Software Architecture for Developers (Simon Brown)
- Your Bookmark on Location 1451 | Added on Tuesday, April 8, 2014 11:08:03 PM


==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 1593-1593 | Added on Tuesday, April 15, 2014 10:04:41 PM


==========
Software Architecture for Developers (Simon Brown)
- Your Bookmark on Location 1593 | Added on Tuesday, April 15, 2014 10:04:58 PM


==========
Software Architecture for Developers (Simon Brown)
- Your Note on Location 1593 | Added on Tuesday, April 15, 2014 10:05:47 PM

nonsense diagrams how we usually create them
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 1593-1593 | Added on Tuesday, April 15, 2014 10:05:47 PM


==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 1620-1621 | Added on Tuesday, April 15, 2014 10:09:07 PM

information about how this communication occurs. Is it SOAP? RESTful services? XML over HTTP? Remote method invocation? Windows Communication Foundation? Asynchronous messaging?
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 1671-1673 | Added on Thursday, April 17, 2014 10:53:44 PM

A better approach is to create a number of diagrams at varying levels of abstraction. A number of simpler diagrams can describe software in a much more effective way than a single complex diagram that tries to describe everything.
==========
Software Architecture for Developers (Simon Brown)
- Your Bookmark on Location 1692 | Added on Friday, April 18, 2014 8:06:38 AM


==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 1696-1702 | Added on Friday, April 18, 2014 8:07:03 AM

Context: A high-level diagram that sets the scene; including key system dependencies and actors. Container: A container diagram shows the high-level technology choices, how responsibilities are distributed across them and how the containers communicate. Component: For each container, a component diagram lets you see the key logical components and their relationships. Classes: This is an optional level of detail and I will draw a small number of high-level UML class diagrams if I want to explain how a particular pattern or component will be (or has been) implemented. The factors that prompt me to draw class diagrams for parts of the software system include the complexity of the software plus the size and experience of the team. Any UML diagrams that I do draw tend to be sketches rather than comprehensive models.
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 2089-2089 | Added on Wednesday, April 30, 2014 10:20:26 PM

The first thing that can really help people to understand a diagram is including a title.
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 2091-2091 | Added on Wednesday, April 30, 2014 10:20:37 PM

make the titles short and meaningful.
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 2093-2094 | Added on Wednesday, April 30, 2014 10:21:17 PM

avoid using acronyms and if you do need to use acronyms
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 2103-2104 | Added on Wednesday, April 30, 2014 10:22:50 PM

annotate things like systems and components with a very short statement of what their responsibilities are.
==========
Software Architecture for Developers (Simon Brown)
- Your Note on Location 2161 | Added on Wednesday, April 30, 2014 10:29:59 PM

checklist for diagrams
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 2152-2161 | Added on Wednesday, April 30, 2014 10:29:59 PM

I can see and understand the solution from multiple levels of abstraction. I understand the big picture; including who is going to use the system (e.g. roles, personas, etc) and what the dependencies are on the existing IT environment (e.g. existing systems). I understand the logical containers and the high-level technology choices that have been made (e.g. web servers, databases, etc). I understand what the major components are and how they are used to satisfy the important user stories/use cases/features/etc. I understand what all of the components are, what their responsibilities are and can see that all components have a home. I understand the notation, conventions, colour coding, etc used on the diagrams. I can see the traceability between diagrams and diagramming elements have been used consistently. I understand what the business domain is and can see a high-level view of the functionality that the software system provides. I understand the implementation strategy (frameworks, libraries, APIs, etc) and can almost visualise how the system will be or has been implemented.
==========
Software Architecture for Developers (Simon Brown)
- Your Note on Location 2246 | Added on Friday, May 2, 2014 10:38:39 PM

interesting questions to understand a codebase
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 2246-2246 | Added on Friday, May 2, 2014 10:38:39 PM

additional layer of information above the code
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 2315-2321 | Added on Saturday, May 3, 2014 10:12:04 PM

The following headings describe what you might want to include in a software guidebook: Context Functional Overview Quality Attributes Constraints Principles Software Architecture External Interfaces Code Data Infrastructure Architecture Deployment Operation and Support Decision Log
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 2342-2344 | Added on Saturday, May 3, 2014 10:40:59 PM

these organisations have a single product (software system) and every major change is managed as a separate project. This results in a huge amount of change over the course of twenty years and a considerable amount of project documentation to digest in order to understand the current state of the software.
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 2702-2703 | Added on Sunday, May 4, 2014 11:24:53 PM

A good way to think about risk is to separate out the probability of that risk happening from the negative impact of it happening.
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 2687-2688 | Added on Sunday, May 11, 2014 10:03:58 PM

Understanding how you’re going to solve a tricky performance requirement is important, understanding the length of every database column most likely isn’t.
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 2719-2720 | Added on Sunday, May 11, 2014 10:06:44 PM

Risk-storming is a quick, fun, collaborative and visual technique for identifying risk that the whole team can take part in. There are 4 steps.
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 2754-2754 | Added on Sunday, May 11, 2014 10:11:18 PM

mitigation strategies
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 2772-2773 | Added on Sunday, May 11, 2014 10:12:34 PM

ensure that somebody on the team is actively looking after the technical risks,
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 2793-2795 | Added on Sunday, May 11, 2014 10:16:22 PM

Sitting between the ends of the scale are methods like the Rational Unified Process (RUP), Disciplined Agile Delivery (DAD) and DSDM Atern
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 2863-2867 | Added on Sunday, May 11, 2014 10:24:50 PM

Will the architecture work? If not, why not? Have all of the key risks been identified? Is the architecture too simple? Is it too complex? Has the architecture been communicated effectively? What do people like about the diagrams? What can be improved? Is there too much detail? Is there enough detail? Could you give this to your team as a starting point? Is there too much control? Is there not enough guidance? Are you happy with the level of technology decisions that have been made or deferred?
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 2905-2906 | Added on Tuesday, May 13, 2014 10:26:27 PM

Educate people Simply run some workshops where people can learn about and understand what software architecture is all about.
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 2909-2909 | Added on Tuesday, May 13, 2014 10:26:38 PM

Talk about architecture in retrospectives
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 2921-2923 | Added on Tuesday, May 13, 2014 10:27:39 PM

Some teams dislike the term “software architect” and use the term architecture owner instead. Whatever you call it, coaching and collaboration are key.
==========
Software Architecture for Developers (Simon Brown)
- Your Highlight on Location 2963-2965 | Added on Tuesday, May 13, 2014 10:35:35 PM

Simply find a problem (e.g. multiple approaches to dealing with configuration, no high-level documentation, a confusing component structure, etc) and just start to fix it.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 722-723 | Added on Tuesday, May 20, 2014 10:43:59 PM

Indeed, AngularJS has a notation of the $rootScope (a scope that is a parent of all the other scopes). The $rootScope instance gets created when a new application is bootstrapped.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 728-729 | Added on Tuesday, May 20, 2014 10:44:30 PM

Scopes form a parent-child, tree-like relationship rooted at the $rootScope instance. As scopes' creation is driven by the DOM tree, it is not surprising that scopes' tree will mimic the DOM structure.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 780-781 | Added on Tuesday, May 20, 2014 10:49:32 PM

There are several ways of influencing properties defined on a parent scope from a child scope. Firstly, we could explicitly reference a parent scope using the $parent property.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 787-788 | Added on Tuesday, May 20, 2014 10:50:15 PM

As a rule of thumb, try to avoid using the $parent property as it strongly links AngularJS expressions to the DOM structure
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 796-798 | Added on Tuesday, May 20, 2014 10:51:33 PM

Avoid direct bindings to scope's properties. Two-way data binding to object's properties (exposed on a scope) is a preferred approach. As a rule of thumb, you should have a dot in an expression provided to the ng-model directive (for example, ng-model="thing.name").
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 800-800 | Added on Tuesday, May 20, 2014 10:52:10 PM

Scopes organized in a hierarchy can be used as an event bus.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 801-802 | Added on Tuesday, May 20, 2014 10:52:26 PM

An event can be dispatched starting from any scope and travel either upwards ($emit) or downwards ($broadcast).
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 814-814 | Added on Tuesday, May 20, 2014 10:53:35 PM

While AngularJS event system is modeled after the DOM
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 787-788 | Added on Tuesday, May 20, 2014 11:00:29 PM

As a rule of thumb, try to avoid using the $parent property as it strongly links AngularJS expressions to the DOM structure created by your templates.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 796-798 | Added on Tuesday, May 20, 2014 11:00:43 PM

Avoid direct bindings to scope's properties. Two-way data binding to object's properties (exposed on a scope) is a preferred approach. As a rule of thumb, you should have a dot in an expression provided to the ng-model directive (for example, ng-model="thing.name").
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 800-800 | Added on Tuesday, May 20, 2014 11:00:53 PM

Scopes organized in a hierarchy can be used as an event bus.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 801-802 | Added on Tuesday, May 20, 2014 11:01:05 PM

An event can be dispatched starting from any scope and travel either upwards ($emit) or downwards ($broadcast).
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 841-843 | Added on Tuesday, May 20, 2014 11:02:15 PM

It is almost similar to creating a new domain-specific language (DSL) on top of HTML and instructing a browser on how to make sense of the new instructions.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 904-906 | Added on Tuesday, May 20, 2014 11:06:06 PM

As a rule of thumb, one should never manipulate the DOM elements in AngularJS controllers. Getting a reference to a DOM element in a controller and manipulating element's properties indicates imperative approach to UI - something that goes against AngularJS way of building UIs.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 941-942 | Added on Thursday, May 22, 2014 10:14:10 PM

A module can be used not only to register objects that are directly invoked by the framework (controllers, filters, and so on) but any objects defined by applications' developers.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 979-980 | Added on Thursday, May 22, 2014 10:21:06 PM

throwing object-creation recipes into the AngularJS dependency injection system.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 982-984 | Added on Thursday, May 22, 2014 10:21:18 PM

dedicated $provide service that allows us to register different recipes for objects creation. Registered recipes are then interpreted by the $injector service to provide fully-baked, ready-to-be-used object instances (with all the dependencies resolved and injected).
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 994-995 | Added on Thursday, May 22, 2014 10:23:02 PM

Value objects are not particularly interesting, since object registered via this method can't depend on other objects.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 1011-1012 | Added on Thursday, May 22, 2014 10:24:48 PM

In practice the service method is not commonly used
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 1025-1026 | Added on Thursday, May 22, 2014 10:25:38 PM

The factory method is the most common way of getting objects into AngularJS dependency injection system.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 1055-1056 | Added on Thursday, May 22, 2014 10:29:01 PM

We can think of providers as objects that embed factory functions in their $get property.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 1062-1063 | Added on Thursday, May 22, 2014 10:31:17 PM

A provider is a special kind of recipe, since it can be further configured before it produces any object instances. To effectively support providers, AngularJS
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 1147-1147 | Added on Thursday, May 22, 2014 10:39:50 PM

services there can be one and only one service with a given name.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 1194-1194 | Added on Thursday, May 22, 2014 10:45:04 PM

JavaScript test runner called Testacular
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 1207-1208 | Added on Thursday, May 22, 2014 10:46:21 PM

If you plan to use jQuery with AngularJS you need to include it before AngularJS script.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 1209-1210 | Added on Friday, May 23, 2014 10:45:59 PM

It is just that the underlying philosophy of two libraries is so different that we can hardly expect any seamless integration.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 1377-1378 | Added on Friday, May 30, 2014 11:50:30 PM

Tasks that are more probable to fail should be executed early in the process, and break the build as soon as an abnormality is detected.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 1444-1445 | Added on Friday, May 30, 2014 11:56:21 PM

Source code for the application and the accompanying tests should be clearly separated.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 1512-1513 | Added on Saturday, May 31, 2014 12:00:17 AM

Partials get the .tpl.html suffix so we can easily distinguish them from other HTML files.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 1062-1066 | Added on Sunday, June 8, 2014 12:10:07 PM

A provider is a special kind of recipe, since it can be further configured before it produces any object instances. To effectively support providers, AngularJS splits module's lifecycle into two phases, which are as follows: The configuration phase: It is the phase where all the recipes are collected and configured The run phase: It is the phase where we can execute any post-instantiation logic
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 1072-1072 | Added on Sunday, June 8, 2014 12:10:27 PM

The configuration phase allows us to do the last-moment tweaks to the objects' creation formula.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 1074-1074 | Added on Sunday, June 8, 2014 12:10:38 PM

The run phase allows us to register any work that should be executed upon the application's bootstrap.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 1601-1602 | Added on Sunday, June 8, 2014 1:30:07 PM

These days, there is really no excuse for not having a comprehensive, automated test battery.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 1622-1623 | Added on Sunday, June 8, 2014 1:37:02 PM

"Writing software without an automated test suite is like climbing without a rope
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 1897-1898 | Added on Sunday, June 8, 2014 4:28:02 PM

The default data to JSON conversion mechanism ignores all properties starting with a dollar sign ($). In general, properties beginning with $ are considered "private" in AngularJS.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 2252-2252 | Added on Sunday, June 8, 2014 6:04:25 PM

If your back-end uses a port number as part of the URL, the port number needs to be escaped while supplying the URL
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 2324-2324 | Added on Sunday, June 8, 2014 6:12:40 PM

$scope.users = Users.query();
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 2350-2351 | Added on Sunday, June 8, 2014 6:21:44 PM

a simplified example of a custom resource-like factory dedicated to the MongoLab RESTful API.
==========
Mastering Web Application Development with AngularJS  
- Your Note on Location 2351 | Added on Sunday, June 8, 2014 6:22:53 PM

could be useful for building a custom REST adapter
==========
Mastering Web Application Development with AngularJS  
- Your Note on Location 2408 | Added on Sunday, June 8, 2014 6:31:16 PM

for centralized error handling and CSRF checks
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 2408-2408 | Added on Sunday, June 8, 2014 6:31:16 PM

Intercepting responses
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 2433-2435 | Added on Sunday, June 8, 2014 6:33:00 PM

In AngularJS the $http service depends on another, lower-level service $httpBackend. We can think of the $httpBackend as a thin wrapper over the XMLHttpRequest object. This wrapper masks browsers incompatibilities and enables JSONP requests.
==========
Mastering Web Application Development with AngularJS  
- Your Note on Location 2435 | Added on Sunday, June 8, 2014 6:33:17 PM

mocking http calls
==========
Mastering Web Application Development with AngularJS  
- Your Note on Location 2440 | Added on Sunday, June 8, 2014 6:37:52 PM

http example test with mocking
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 2439-2440 | Added on Sunday, June 8, 2014 6:37:52 PM

Here is the code for the controller itself:
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 2465-2466 | Added on Sunday, June 8, 2014 6:40:27 PM

The verifyNoOutstandingExpectation method verifies that all the expected calls were made ($http methods invoked and responses flushed),
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 2466-2467 | Added on Sunday, June 8, 2014 6:40:47 PM

verifyNoOutstandingRequest call makes sure that code under test didn't trigger any unexpected XHR calls.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 2512-2512 | Added on Sunday, June 8, 2014 6:46:02 PM

interpolation directive
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 2522-2523 | Added on Sunday, June 8, 2014 6:48:56 PM

interpolation directive has an equivalent directive called ng-bind.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 2525-2527 | Added on Sunday, June 8, 2014 6:49:15 PM

Usually the ng-bind directive is used to hide expressions before AngularJS has a chance of processing them on the initial page load. This prevents UI flickering and provides better user experience.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 2537-2538 | Added on Sunday, June 8, 2014 6:50:36 PM

for any reason, your model contains HTML markup that needs to be evaluated and rendered by a browser you can use the ng-bind-html-unsafe directive to switch off default HTML tags escaping:
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 2543-2544 | Added on Sunday, June 8, 2014 6:52:37 PM

AngularJS has one more directive that will selectively sanitize certain HTML tags while allowing others to be interpreted by a browser: ng-bind-html.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 2559-2561 | Added on Sunday, June 8, 2014 6:54:13 PM

Showing and hiding parts of the DOM based on some conditions is a common requirement. AngularJS comes equipped with four different sets of directives for this occasion (ng-show/ng-hide, ng-switch-*, ng-if and ng-include).
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 2579-2581 | Added on Sunday, June 8, 2014 6:56:55 PM

The ng-show/ng-hide directives are easy to use but might have unpleasant performance consequences if applied to large number of DOM nodes. If you spot performance issues related to the size of DOM tree you should lean towards using more verbose ng-switch family of directives.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 2623-2624 | Added on Sunday, June 8, 2014 7:01:54 PM

$first, $middle, $last: These variables will get a Boolean value according to element's position
==========
Mastering Web Application Development with AngularJS  
- Your Note on Location 2689 | Added on Sunday, June 8, 2014 7:06:52 PM

for striped tables
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 2689-2690 | Added on Sunday, June 8, 2014 7:06:52 PM

(ngClassEven and ngClassOdd)
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 2720-2721 | Added on Sunday, June 8, 2014 7:09:26 PM

Mentioned DOM event handlers can accept a special argument $event in their expression, which represents the raw DOM event.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 2860-2861 | Added on Sunday, June 8, 2014 9:21:51 PM

this case a function can be provided as an argument to the filter (so called predicate function). Such a function will be invoked for each and every individual element of a source collection.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 2860-2861 | Added on Sunday, June 8, 2014 9:22:06 PM

In this case a function can be provided as an argument to the filter (so called predicate function). Such a function will be invoked for each and every individual element of a source collection.
==========
Mastering Web Application Development with AngularJS  
- Your Note on Location 2879 | Added on Sunday, June 8, 2014 9:24:37 PM

storing filter results; for performance reasons
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 2876-2880 | Added on Sunday, June 8, 2014 9:24:37 PM

To remedy this situation we can create an intermediate variable (filteredBacklog) that would hold a filtered array: ng-repeat="item in filteredBacklog = (backlog | filter:{$: criteria, done: false})" Then, counting filtered results boils down to displaying the length of a saved array: Total: {{filteredBacklog.length}}
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 2936-2937 | Added on Sunday, June 8, 2014 9:37:34 PM

Filters are very easy to unit test; they work on a supplied input,
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 2949-2950 | Added on Sunday, June 8, 2014 9:37:55 PM

access to filters instances from JavaScript code (controllers, services, other filters, and so on). This way we can combine the existing filters to
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 2953-2954 | Added on Sunday, June 8, 2014 9:38:17 PM

The $filter service is a lookup function that allows us to retrieve an instance of a filter based on its name.
==========
Mastering Web Application Development with AngularJS  
- Your Note on Location 2963 | Added on Sunday, June 8, 2014 9:41:35 PM

alternative to using the $filter service is to write <filtrname>Filter as dependency
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 2963-2963 | Added on Sunday, June 8, 2014 9:41:35 PM

.filter('trim', function(limitToFilter){
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 2979-2979 | Added on Sunday, June 8, 2014 9:42:28 PM

in practice, that filters outputting HTML are not the best idea.
==========
Mastering Web Application Development with AngularJS  
- Your Note on Location 2995 | Added on Sunday, June 8, 2014 9:44:58 PM

avoid
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 2995-2995 | Added on Sunday, June 8, 2014 9:44:59 PM

Costly data transformations in filters
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 3005-3007 | Added on Sunday, June 8, 2014 9:50:56 PM

Don't be surprised to see that a filter is called multiple times in a row; this is AngularJS dirty checking at work. Strive to write your filters so they do light, fast processing.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 3167-3167 | Added on Sunday, June 8, 2014 10:15:05 PM

AngularJS provides an additional syntax for dynamically defining a complex list of options for a select directive.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 3231-3233 | Added on Monday, June 9, 2014 7:58:04 AM

It is possible to hide the empty option by defining your own and setting its style to display: none. <option style="display:none" value=""></option>
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 3277-3278 | Added on Monday, June 9, 2014 10:04:09 AM

Each ngModel directive creates an instance of ngModelController.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 3285-3286 | Added on Monday, June 9, 2014 10:04:22 AM

This consists of two arrays: $formatters that transforms from model into view and $parsers that transforms from view to model.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 3293-3296 | Added on Monday, June 9, 2014 10:04:47 AM

When it is first initialized the ngModelController marks the value as pristine, that is, it has not been modified. It exposes this as an ng-pristine CSS class on the input element. When the view changes, say through typing in an input box, the value is marked as dirty. It replaces the ng-pristine CSS class with the ng-dirty CSS class.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 3302-3303 | Added on Monday, June 9, 2014 10:05:18 AM

The ngModelController tracks the validity and applies the ng-valid or ng-invalid CSS classes accordingly.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 3508-3508 | Added on Monday, June 9, 2014 10:24:21 AM

var original = angular.copy($scope.user);
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 3806-3807 | Added on Monday, June 9, 2014 1:07:58 PM

Since $routeParams is a regular service, it can be injected into any object managed by the AngularJS Dependency Injection system.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 3824-3825 | Added on Monday, June 9, 2014 1:08:45 PM

By moving the controller to the route definition level, we've gained the possibility of reusing the same controller for different partials and more importantly, reusing the same partials with different controllers.
==========
Mastering Web Application Development with AngularJS  
- Your Note on Location 3837 | Added on Monday, June 9, 2014 1:10:05 PM

during route transition
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 3837-3837 | Added on Monday, June 9, 2014 1:10:05 PM

users might notice an unpleasant flickering effect.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 3840-3840 | Added on Monday, June 9, 2014 1:11:01 PM

By using the resolve property on a route definition object we can enumerate asynchronous dependencies for a route's controller.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 3842-3846 | Added on Monday, June 9, 2014 1:11:12 PM

To illustrate the basic usage of the resolve property, let's rewrite our "edit user" route as follows: .when('/admin/users/:userid', { templateUrl: 'tpls/users/edit.html' controller: 'EditUserCtrl', resolve: { user: function($route, Users) { return Users.getById($route.current.params.userid); } } })
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 3877-3879 | Added on Monday, June 9, 2014 1:14:08 PM

the resolve property of a route definition has a built-in support for blocking route navigation. If a value of one of the resolve keys is a promise that is rejected, AngularJS will cancel route navigation and won't change the view in the UI.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 3963-3963 | Added on Monday, June 9, 2014 1:21:15 PM

AngularJS ng-href equivalent that makes it easy to create dynamic URLs:
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4003-4004 | Added on Monday, June 9, 2014 1:23:22 PM

we can spread routes definitions across different modules and avoid maintaining one giant file containing all the route definitions.
==========
Mastering Web Application Development with AngularJS  
- Your Note on Location 4013 | Added on Monday, June 9, 2014 1:26:04 PM

interesting approach for reusing routes
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4012-4013 | Added on Monday, June 9, 2014 1:26:04 PM

the sample SCRUM application contains a custom provider that drastically reduces the amount of code needed to define routes for CRUD functionality.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4056-4057 | Added on Monday, June 9, 2014 1:31:38 PM

We cannot rely on code on the client side to block access to sensitive information. Similarly, the server must never rely on the client to validate data that is sent to it.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4092-4092 | Added on Monday, June 9, 2014 1:34:20 PM

AngularJS caches all the templates that it downloads in the $templateCache service.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4224-4225 | Added on Monday, June 9, 2014 1:47:31 PM

We are using the AngularUI bootstrap project's $dialog service for this.
==========
Mastering Web Application Development with AngularJS  
- Your Note on Location 4311 | Added on Monday, June 9, 2014 1:57:46 PM

interesting workflow for handling auth scenarios without interrupting the user session
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4309-4311 | Added on Monday, June 9, 2014 1:57:46 PM

The original idea for this came from an excellent blog post by Witold Szczerba: http://www.espeo.pl/2012/02/26/authentication-in-angularjs-application.
==========
Mastering Web Application Development with AngularJS  
- Your Note on Location 4389 | Added on Monday, June 9, 2014 3:05:54 PM

dependncy injection works on all functions
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4389-4389 | Added on Monday, June 9, 2014 3:05:54 PM

resolve: [security, function requireAdminUser(security) {
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4414-4417 | Added on Monday, June 9, 2014 3:10:46 PM

Since these methods are in a service, which is not available directly while configuring the $routeProvider, we would normally have to call these methods in a function, wrapped in an array as follows: ['securityAuthorization', function(securityAuthorization) { return securityAuthorization.requireAdminUser(); }]
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4442-4445 | Added on Monday, June 9, 2014 3:14:01 PM

The main reasons why you would want to develop custom directives are: You need to manipulate the DOM directly, such as with JQuery You want to refactor parts of your application to remove repeated codes You want to create new HTML mark-up for non-developers to use, such as designers
==========
Mastering Web Application Development with AngularJS  
- Your Note on Location 4457 | Added on Monday, June 9, 2014 3:15:44 PM

light jQuery version included by default
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4457-4457 | Added on Monday, June 9, 2014 3:15:44 PM

AngularJS's jqLite.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4458-4460 | Added on Monday, June 9, 2014 3:16:04 PM

If you load jQuery before AngularJS, then AngularJS will use jQuery for its DOM manipulation. Otherwise AngularJS assumes that you are not using jQuery and implements its own internal, minimal version of jQuery, which is often referred to as jqLite.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4470-4470 | Added on Monday, June 9, 2014 3:16:58 PM

The built-in AngularJS directives can be found in the src/ng/directive folder of the AngularJS
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4476-4478 | Added on Monday, June 9, 2014 3:17:30 PM

Here are some examples of using a directive in the HTML mark-up (not all of these would be appropriate depending on the use of the directive): <my-directive></my-directive> <input my-directive> <!-- directive: my-directive--> <input class="my-directive">
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4482-4484 | Added on Monday, June 9, 2014 3:18:38 PM

When AngularJS compiles an HTML template it traverses the DOM supplied by the browser and tries to match each element, attribute, comment, and CSS class against its list of registered directives. When it matches a directive, AngularJS calls the directive's compile function, which returns a linking function.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4485-4486 | Added on Monday, June 9, 2014 3:18:44 PM

The compilation stage is done before the scope has been prepared, and no scope data is available in the compile function.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4487-4488 | Added on Monday, June 9, 2014 3:18:52 PM

AngularJS creates the scope and links each directive to the scope by calling each of the linking functions.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4492-4493 | Added on Monday, June 9, 2014 3:19:26 PM

(inside ng-repeat), the compile function of the directive is called only once, but the linking function is called on every iteration of the repeater, every time the data changes.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4521-4522 | Added on Monday, June 9, 2014 3:21:21 PM

If you have some complex functionality that does not rely on the data in the scope, then it should appear in the compile function, so that it is only called once.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4610-4612 | Added on Monday, June 9, 2014 3:32:48 PM

Remember that the injector ignores a pair of underscores (for example, _$compile_) surrounding the parameter name. This allows us to copy the injected services into variables with the correct name for use later (for example, $compile = _$compile_).
==========
Mastering Web Application Development with AngularJS  
- Your Note on Location 4649 | Added on Monday, June 9, 2014 3:36:00 PM

could prove to be useful for our apps
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4649-4649 | Added on Monday, June 9, 2014 3:36:00 PM

Writing a pagination directive
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4693-4698 | Added on Monday, June 9, 2014 3:39:50 PM

We have three options for the scope to be used in our directive and its template. This is defined in the directive definition: To reuse the scope, from the place where the widget is used. This is the default and corresponds to scope: false. To create a child scope, which prototypically inherits from the scope where the widget is used. You specify this with scope: true. To create an isolated scope, which does not prototypically inherit, so that it is completely isolated from its parent. You specify this by passing an object to the scope property: scope: { ... }.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4702-4703 | Added on Monday, June 9, 2014 3:40:47 PM

While an isolated scope does not prototypically inherit from its parent, it can still access its parent's scope through the $parent property.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4708-4710 | Added on Monday, June 9, 2014 3:42:59 PM

There are three types of interface we can specify between the element's attributes and the isolated scope: interpolate (@), data bind (=), and expression (&). You specify these interfaces as key-value pairs on the scope property of the directive definition.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4716-4717 | Added on Monday, June 9, 2014 3:46:10 PM

If the attribute name is omitted from the value, then it is assumed that the attribute has the same name as the isolated scope field: scope: { isolated1: '@' }
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4720-4722 | Added on Monday, June 9, 2014 3:47:23 PM

The @ symbol indicates that AngularJS should interpolate the value of the specified attribute and update the isolated scope property when it changes. Interpolation is used with {{}} curly braces to generate a string using values from the parent scope.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4723-4724 | Added on Monday, June 9, 2014 3:47:27 PM

Interpolation always returns a string.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4730-4732 | Added on Monday, June 9, 2014 3:49:12 PM

The = symbol indicates that AngularJS should keep the expression in the specified attribute and the value on the isolated scope in sync with each other. This is a two-way data binding that allows objects and values to be mapped directly between the inside and outside of the widget.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4740-4742 | Added on Monday, June 9, 2014 3:50:18 PM

The & symbol indicates that the expression provided in the attribute on the element will be made available on the scope as a function that, when called, will execute the expression. This is useful for creating callbacks from the widget.
==========
Mastering Web Application Development with AngularJS  
- Your Note on Location 4771 | Added on Monday, June 9, 2014 3:54:51 PM

creation of a spy to test directive callbacks
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4771-4771 | Added on Monday, June 9, 2014 3:54:51 PM

jasmine.createSpy('selectPageHandler');
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4801-4802 | Added on Monday, June 9, 2014 4:02:39 PM

Validation directives require access to the ngModelController, which is the directive controller for the ng-model directive. We specify this in our directive definition using the require field.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4811-4812 | Added on Monday, June 9, 2014 4:03:38 PM

You can make the require field of the controller optional by putting a '?' in front of the directive name, for example, require: '?ngModel'.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4815-4817 | Added on Monday, June 9, 2014 4:03:52 PM

If the directive, whose controller you require, can appear on this or any ancestor of the current element, then you can put a '^' in front of the directive name, for example, require: '^ngModel'.
==========
Mastering Web Application Development with AngularJS  
- Your Note on Location 4990 | Added on Monday, June 9, 2014 4:54:20 PM

integrating jQuery UI widgets
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 4990-4990 | Added on Monday, June 9, 2014 4:54:20 PM


==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5023-5023 | Added on Monday, June 9, 2014 4:58:55 PM

angular.isDefined(date)
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5057-5058 | Added on Monday, June 9, 2014 5:03:29 PM

What we really need is to "bring the original scope with us". Moving elements and their scope in this way is called transclusion.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5088-5089 | Added on Monday, June 9, 2014 5:05:54 PM

The replace property tells the compiler to replace the original directive's element with the template given by the template field.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5096-5098 | Added on Monday, June 9, 2014 5:07:12 PM

Using transclude: true means that the children of the directive's element will be transcluded. This is what happens in the alert directive, although we then replaced the directive's element with our template.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5098-5099 | Added on Monday, June 9, 2014 5:07:19 PM

Using transclude: 'element' means the entire element will be transcluded including any attribute directives that have not already been compiled. This is what happens in the ng-repeat directive.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5101-5102 | Added on Monday, June 9, 2014 5:08:12 PM

The ng-transclude directive gets the transcluded elements and appends them to the element in the template on which it appears. This is the simplest and most common way to use transclusion.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5105-5106 | Added on Monday, June 9, 2014 5:11:24 PM

New scopes are created by directives that specify a scope property on their directive definition object.
==========
Mastering Web Application Development with AngularJS  
- Your Bookmark on Location 5211 | Added on Wednesday, June 11, 2014 9:22:26 PM


==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5151-5152 | Added on Thursday, June 19, 2014 10:23:56 PM

When a directive requests transclusion, AngularJS will extract the transcluded elements from the DOM and compile them.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5158-5158 | Added on Thursday, June 19, 2014 10:25:27 PM

The AngularJS compiler is exposed as the $compile service.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5161-5162 | Added on Thursday, June 19, 2014 10:29:00 PM

The call to $compile service returns a linking function.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5247-5249 | Added on Sunday, June 22, 2014 5:09:58 PM

directives have a priority, defaulting to zero, as in the case of the alert directive. On each element, AngularJS compiles the higher priority directives before lower priority ones. We can specify this using the priority property on the directive definition object.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5247-5249 | Added on Sunday, June 22, 2014 5:10:05 PM

All directives have a priority, defaulting to zero, as in the case of the alert directive. On each element, AngularJS compiles the higher priority directives before lower priority ones. We can specify this using the priority property on the directive definition object.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5264-5266 | Added on Sunday, June 22, 2014 5:14:32 PM

A directive controller is a special form of controller that is defined by a directive and instantiated each time that directive appears on a DOM element. Its role is to initialize and provide behavior for the directive rather than a scope.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5267-5268 | Added on Sunday, June 22, 2014 5:44:12 PM

The controller property can be a string containing the name of a controller already defined on a module:
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5271-5271 | Added on Sunday, June 22, 2014 5:44:17 PM

constructor function that will be used to instantiate the controller:
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5276-5277 | Added on Sunday, June 22, 2014 5:45:02 PM

Defining the module inline, as an anonymous function, makes it more difficult to test it separately from the directive but allows us to keep it private to the directive.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5307-5307 | Added on Sunday, June 22, 2014 5:49:21 PM

directive controllers must use dependency injection annotations to specify what services it needs,
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5308-5309 | Added on Sunday, June 22, 2014 5:49:41 PM

A link function is always passed the same four parameters: scope, element, attrs, and controller, regardless of the names of these parameters in the function definition.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5322-5324 | Added on Sunday, June 22, 2014 5:51:51 PM

This means that when a directive controller is instantiated the directive's element and its children have not yet been fully linked. But when the link functions (pre or post) are called, all the directive controllers for that element have already been instantiated. This is why directive controllers can be passed to link functions.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5325-5328 | Added on Sunday, June 22, 2014 5:53:42 PM

The post-link function is called after the compiler has completely finished compiling and linking the current element and all its child elements. This means that any changes to the DOM at this stage will not be noticed by the AngularJS compiler. This is useful when you want to wire up third party libraries to elements, such as a JQuery plug-in, which may modify the DOM in a way that would confuse the AngularJS compiler.
==========
Mastering Web Application Development with AngularJS  
- Your Note on Location 5417 | Added on Sunday, June 22, 2014 10:29:24 PM

how does requiring work??
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5416-5417 | Added on Sunday, June 22, 2014 10:29:24 PM

You can see that this directive requires the directive controller from the accordion directive to appear on an ancestor of this directive's DOM element.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5454-5454 | Added on Sunday, June 22, 2014 10:32:45 PM

terminal: true,
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5464-5465 | Added on Sunday, June 22, 2014 10:33:39 PM

If a directive has terminal: true, the compiler will stop and not process the child elements
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5462-5462 | Added on Sunday, June 22, 2014 10:33:59 PM

The compile function returns a postLink function, which will load a suitable template.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5467-5468 | Added on Sunday, June 22, 2014 10:34:12 PM

Even if you terminate a directive, the directive controller, compile function, and link function for that directive are still executed.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5486-5487 | Added on Wednesday, June 25, 2014 11:23:12 PM

The $interpolate service is used throughout AngularJS to evaluate strings that contain {{}} curly braces.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5488-5489 | Added on Wednesday, June 25, 2014 11:23:48 PM

var getFullName = $interpolate('{{first}}{{last}}'); var scope = { first:'Pete',last:'Bacon Darwin' }; var fullName = getFullName(scope);
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5565-5566 | Added on Wednesday, June 25, 2014 11:28:59 PM

and declare a dependency on the locale module. For example, to configure a web application to use the French-Canadian (fr-ca) locale
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5579-5580 | Added on Wednesday, June 25, 2014 11:30:00 PM

For example, we can find all the month names by inspecting $locale.DATETIME_FORMATS.MONTH.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5575-5575 | Added on Wednesday, June 25, 2014 11:30:18 PM

The ngLocale module exposes only one service: $locale.
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5646-5647 | Added on Wednesday, June 25, 2014 11:35:22 PM

Writing Robust AngularJS Web Applications is strongly correlated with a number of expressions that need to be watched and evaluated by the framework.
==========
Mastering Web Application Development with AngularJS  
- Your Note on Location 5663 | Added on Wednesday, June 25, 2014 11:36:48 PM

for i18n
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 5663-5663 | Added on Wednesday, June 25, 2014 11:36:48 PM

Translating partials during the build-time
==========
Mastering Web Application Development with AngularJS  
- Your Bookmark on Location 5716 | Added on Saturday, July 5, 2014 5:00:12 PM


==========
Mastering Web Application Development with AngularJS  
- Your Note on Location 6037 | Added on Saturday, July 5, 2014 5:52:48 PM

a nice example follows resolving the inner workings
==========
Mastering Web Application Development with AngularJS  
- Your Highlight on Location 6036-6037 | Added on Saturday, July 5, 2014 5:52:48 PM

Let's summarize what we know about AngularJS inner working by examining a simple example of an input field propagating changes live to DOM:
==========
Developing RESTful Services with JAX-RS 2.0, WebSockets, and JSON  
- Your Highlight on Location 362-362 | Added on Tuesday, July 8, 2014 3:01:04 PM

A resource class is a POJO that uses the JAX-RS annotations.
==========
Developing RESTful Services with JAX-RS 2.0, WebSockets, and JSON  
- Your Highlight on Location 371-371 | Added on Tuesday, July 8, 2014 3:01:34 PM

@Path("books") public class BooksResource { }
==========
Developing RESTful Services with JAX-RS 2.0, WebSockets, and JSON  
- Your Highlight on Location 377-377 | Added on Tuesday, July 8, 2014 3:01:55 PM

@GET, @PUT, @DELETE, or @HEAD.
==========
Developing RESTful Services with JAX-RS 2.0, WebSockets, and JSON  
- Your Highlight on Location 382-383 | Added on Tuesday, July 8, 2014 3:02:46 PM

To specify the MIME type that can be handled by the resource, we should annotate the resource method with @Produces and @Consumes:
==========
Developing RESTful Services with JAX-RS 2.0, WebSockets, and JSON  
- Your Highlight on Location 389-391 | Added on Tuesday, July 8, 2014 3:03:05 PM

The Application class is a portable way to configure application-level details such as specifying the name, and registering various components of a JAX-RS application.
==========
Developing RESTful Services with JAX-RS 2.0, WebSockets, and JSON  
- Your Highlight on Location 392-393 | Added on Tuesday, July 8, 2014 3:03:18 PM

The Application subclass should to be placed in either in WEB-INF/classes or WEB-INF/lib in a WAR file.
==========
Developing RESTful Services with JAX-RS 2.0, WebSockets, and JSON  
- Your Highlight on Location 396-399 | Added on Tuesday, July 8, 2014 3:03:55 PM

@ApplicationPath("/library/") public class HelloWorldApplication extends Application { @Override public Set<Class<?>> getClasses() { Set<Class<?>> classes = new HashSet<Class<?>>(); classes.add(BooksResource.class); return classes; } }
==========
Developing RESTful Services with JAX-RS 2.0, WebSockets, and JSON  
- Your Highlight on Location 400-401 | Added on Tuesday, July 8, 2014 3:04:02 PM

With Servlet 3.0 there is no need of a web.xml file and the servlet container uses the value specified in the @ApplicationPath as the servlet mapping.
==========
Developing RESTful Services with JAX-RS 2.0, WebSockets, and JSON  
- Your Highlight on Location 409-410 | Added on Tuesday, July 8, 2014 3:04:57 PM

Resource classes can partially process some part of the request and provide another subresource to process the remaining part of the request.
==========
Developing RESTful Services with JAX-RS 2.0, WebSockets, and JSON  
- Your Highlight on Location 415-416 | Added on Tuesday, July 8, 2014 3:06:31 PM

Subresource locators are resource methods that have @Path annotation but no HTTP methods.
==========
Developing RESTful Services with JAX-RS 2.0, WebSockets, and JSON  
- Your Highlight on Location 473-474 | Added on Tuesday, July 8, 2014 3:15:05 PM

Client client = ClientBuilder.newClient(); WebTarget target = client.target(URI);
==========
Developing RESTful Services with JAX-RS 2.0, WebSockets, and JSON  
- Your Highlight on Location 499-500 | Added on Tuesday, July 8, 2014 3:44:44 PM

There are two types of entity providers: MessageBodyReader MessageBodyWriter
==========
Developing RESTful Services with JAX-RS 2.0, WebSockets, and JSON  
- Your Highlight on Location 573-574 | Added on Tuesday, July 8, 2014 3:56:39 PM

MessageBodyReader implementation class and MessageBodyWriter implementation class need the @Provider annotation.
==========
Developing RESTful Services with JAX-RS 2.0, WebSockets, and JSON  
- Your Highlight on Location 596-597 | Added on Tuesday, July 8, 2014 4:01:09 PM

@Produces(MediaType.APPLICATION_XML) @NotNull(message="Book does not exist for the ISBN requested")
==========
Developing RESTful Services with JAX-RS 2.0, WebSockets, and JSON  
- Your Highlight on Location 606-608 | Added on Tuesday, July 8, 2014 4:02:27 PM

The user needs to set BV_SEND_ERROR_IN_RESPONSE property to Boolean value true using Application class by overriding the getProperties() method.
==========
Developing RESTful Services with JAX-RS 2.0, WebSockets, and JSON  
- Your Highlight on Location 609-611 | Added on Tuesday, July 8, 2014 4:02:33 PM

@override public Map<String,Object> getProperties() { Map<String,Object> properties = new HashMap<String,Object>() ; properties.put(ServerProperties.BV_SEND_ERROR_IN_RESPONSE, true); return properties; }
==========
